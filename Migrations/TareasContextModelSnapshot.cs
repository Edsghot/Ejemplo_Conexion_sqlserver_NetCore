// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using minimalApi;

#nullable disable

namespace minimalApi.Migrations
{
    [DbContext(typeof(TareasContext))]
    partial class TareasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("minimalApi.Models.Categoria", b =>
                {
                    b.Property<Guid?>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("Peso")
                        .HasColumnType("int");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("a42d2e46-4aab-4fe6-9c3a-44c98610648c"),
                            Nombre = "Actividades pendientes",
                            Peso = 20
                        },
                        new
                        {
                            CategoriaId = new Guid("a42d2e46-4aab-4fe6-9c3a-44c986106482"),
                            Nombre = "Actividades Personales",
                            Peso = 50
                        });
                });

            modelBuilder.Entity("minimalApi.Models.Tarea", b =>
                {
                    b.Property<Guid?>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaConclusion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrioridadTarea")
                        .HasColumnType("int");

                    b.Property<string>("Resumen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TareaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("tarea", (string)null);

                    b.HasData(
                        new
                        {
                            TareaId = new Guid("a42d2e46-4aab-4fe6-9c3a-44c986106483"),
                            CategoriaId = new Guid("a42d2e46-4aab-4fe6-9c3a-44c986106482"),
                            FechaConclusion = new DateTime(2023, 1, 9, 2, 45, 2, 851, DateTimeKind.Local).AddTicks(6126),
                            FechaCreacion = new DateTime(2023, 1, 9, 2, 45, 2, 851, DateTimeKind.Local).AddTicks(6101),
                            PrioridadTarea = 1,
                            Titulo = "pago de servicios publicos"
                        },
                        new
                        {
                            TareaId = new Guid("a42d2e46-4aab-4fe6-9c3a-44c986106a81"),
                            CategoriaId = new Guid("a42d2e46-4aab-4fe6-9c3a-44c98610648c"),
                            FechaConclusion = new DateTime(2023, 1, 9, 2, 45, 2, 851, DateTimeKind.Local).AddTicks(6195),
                            FechaCreacion = new DateTime(2023, 1, 9, 2, 45, 2, 851, DateTimeKind.Local).AddTicks(6194),
                            PrioridadTarea = 1,
                            Titulo = "pago de leyendas"
                        });
                });

            modelBuilder.Entity("minimalApi.Models.Tarea", b =>
                {
                    b.HasOne("minimalApi.Models.Categoria", "Categoria")
                        .WithMany("Tareas")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("minimalApi.Models.Categoria", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
